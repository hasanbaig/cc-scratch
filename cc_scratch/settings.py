"""
Django settings for cc_scratch project by Hasan Baig.

Generated by 'django-admin startproject' using Django 1.11.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
#The directory where the cloud-copasi source code has been installed
CLOUD_COPASI_DIR = '/Users/cloudcopasi/cc-scratch'

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2', # Add 'postgresql_psycopg2', 'mysql', 'sqlite3' or 'oracle'.
        'NAME': 'cloud_copasi_db',                          # Or path to database file if using sqlite3.
        'USER': 'cloud_copasi_user',                        # Not used with sqlite3.
        'PASSWORD': 'password',                             # Not used with sqlite3.
        'HOST': '127.0.0.1',                                # Set to empty string for localhost. Not used with sqlite3.
        'PORT': '',                                         # Set to empty string for default. Not used with sqlite3.
    }
}
# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

# TODO: Understand this file.

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'u2)mb#y)_@*+=@1am%#z^k3y6k2hvi5uy%jsz0b)+u8wsv62tc'


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOW_NEW_REGISTRATIONS = True

ALLOWED_HOSTS = ['*']

DEFAULT_FROM_EMAIL = 'Cloud-COPASI <noreply@domain.com>'
#Send email notifications, e.g. job completion, job errors?
SEND_EMAILS = True
#The SMTP Host server.
EMAIL_HOST = 'localhost'
##Other mail authentication settings
#EMAIL_HOST_USER = ''
#EMAIL_HOST_PASSWORD = ''
#EMAIL_PORT =
#EMAIL_USE_TLS = True

#The site that cloud-copasi will be hosted on
HOST='subdomain.domain.com'

#Register this subdomain at https://www.google.com/recaptcha/admin/create
#To enable the registration captcha
RECAPTCHA_PUBLIC_KEY  = ''
RECAPTCHA_PRIVATE_KEY = ''

#The location of the cloud-copasi user home directory. Include the trailing slash
#HOME_DIR='/home/cloudcopasi/'
HOME_DIR='/Users/cloudcopasi/cc-scratch'

#The directory where bosco is installed. Include the trailing slash
BOSCO_DIR = '/Users/cloudcopasi/cc-scratch/bosco/'

#Dictionary containing custom environment variables for bosco, e.g. PATH,
#LD_LIBRARY_PATH etc. Generally not needed, so leave blank
BOSCO_CUSTOM_ENV = {}

#The instance type for the Master node.
#Will probably be t1.micro or m1.small
MASTER_NODE_TYPE = 'm1.small'

#Storage locations. Be sure to include the trailing slash
STORAGE_DIR = '/Users/cloudcopasi/user-files/'
KEYPAIR_FILEPATH = '/Users/cloudcopasi/instance_keypairs/'
#LOG_DIR = '/home/cloudcopasi/log/'
LOG_DIR = '/Users/cloudcopasi/log/'

#The location of the CopasiSE binary
COPASI_LOCAL_BINARY = '/Users/cloudcopasi/cc-scratch/copasi/bin/CopasiSE'

#Load balancing parameter
IDEAL_JOB_TIME = 15 #Minutes

#How often should the local bosco pool be polled
DAEMON_POLL_TYME = 30 #Seconds

ADMINS = (
    # ('Your Name', 'hbaig@uchc.edu'),
)

MANAGERS = ADMINS


SITE_ID = 1 #Don't change

# Local time zone for this installation. Choices can be found here:
# http://en.wikipedia.org/wiki/List_of_tz_zones_by_name
# although not all choices may be available on all operating systems.
# In a Windows environment this must be set to your system time zone.
TIME_ZONE = 'America/New_York'
USE_TZ=True
# Language code for this installation. All choices can be found here:
# http://www.i18nguy.com/unicode/language-identifiers.html
LANGUAGE_CODE = 'en-us'


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

# If you set this to False, Django will make some optimizations so as not
# to load the internationalization machinery.
USE_I18N = True

# If you set this to False, Django will not format dates, numbers and
# calendars according to the current locale.
USE_L10N = True

# If you set this to False, Django will not use timezone-aware datetimes.
USE_TZ = True


# Absolute filesystem path to the directory that will hold user-uploaded files.
# Example: "/home/media/media.lawrence.com/media/"
MEDIA_ROOT = ''

# URL that handles the media served from MEDIA_ROOT. Make sure to use a
# trailing slash.
# Examples: "http://media.lawrence.com/media/", "http://example.com/media/"
MEDIA_URL = ''

# Absolute path to the directory static files should be collected to.
# Don't put anything in this directory yourself; store your static files
# in apps' "static/" subdirectories and in STATICFILES_DIRS.
# Example: "/home/media/media.lawrence.com/static/"
STATIC_ROOT = os.path.join(CLOUD_COPASI_DIR, 'cc_scratch/web_interface/templates/static-all/')


# URL prefix for static files.
# Example: "http://media.lawrence.com/static/"
STATIC_URL = '/static/'

# Additional locations of static files
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATICFILES_DIRS = [
    # Put strings here, like "/home/html/static" or "C:/www/django/static".
    # Always use forward slashes, even on Windows.
    # Don't forget to use absolute paths, not relative paths.
    os.path.join(CLOUD_COPASI_DIR, 'html5up/static'),
    os.path.join(CLOUD_COPASI_DIR, 'cc_scratch/web_interface/templates/static'),
]


# List of finder classes that know how to find static files in
# various locations.
STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
#    'django.contrib.staticfiles.finders.DefaultStorageFinder',
]

MIDDLEWARE = [
    'django.middleware.common.CommonMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    # Uncomment the next line for simple clickjacking protection:
    # 'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'cc_scratch.urls'

WSGI_APPLICATION = 'cc_scratch.wsgi.application'

#TEMPLATE_DIRS = (
    # Put strings here, like "/home/html/django_templates" or "C:/www/django/templates".
    # Always use forward slashes, even on Windows.
    # Don't forget to use absolute paths, not relative paths.
#    os.path.join(CLOUD_COPASI_DIR, 'html5up'),
#    os.path.join(CLOUD_COPASI_DIR, 'cloud_copasi/web_interface/templates'),
#    os.path.join(CLOUD_COPASI_DIR, 'cloud_copasi/web_interface/task_plugins/plugins'),

#)

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(CLOUD_COPASI_DIR, 'html5up'),
                 os.path.join(CLOUD_COPASI_DIR, 'cc_scratch/web_interface/templates'),
                 os.path.join(CLOUD_COPASI_DIR, 'cc_scratch/web_interface/task_plugins/plugins'),],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.i18n',
                'django.template.context_processors.media',
                'django.template.context_processors.static',
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
            'string_if_invalid': 'Invalid: "%s"',
            'debug': DEBUG,
        },
    },
]

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# Application definition

INSTALLED_APPS = [
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.sites',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    #'django.contrib.dynamic_scraper',
    # Uncomment the next line to enable the admin:
    'django.contrib.admin',
    # Uncomment the next line to enable admin documentation:
    'django.contrib.admindocs',
    'cc_scratch.web_interface',
    'cc_scratch.django_recaptcha',
    'django_extensions',
]


LOGIN_REDIRECT_URL = '/'
LOGIN_URL = '/sign_in'
LOGOUT_URL = '/sign_out'

#Log levels: critical, error, warning, info, debug
LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'formatters': {
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s'
        },
        'simple': {
            'format': '%(levelname)s %(message)s'
        },
    },
    'handlers': {
        'null': {
            'level': 'DEBUG',
            'class': 'logging.NullHandler',
        },
        'console':{
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'simple'
        },
        'file' : {
            'level': 'DEBUG',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(LOG_DIR, 'cloud-copasi.log'),
            'maxBytes': 1024*1024*5, # 5 MB
            'backupCount': 10,
            'formatter':'verbose',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file'],
            'propagate': True,
            'level': 'INFO',
        },
        'cloud_copasi': {
            'handlers': ['console', 'file'],
            'level': 'DEBUG',
        }
    }
}











# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

#AUTH_PASSWORD_VALIDATORS = [
#    {
#        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
#    },
#    {
#        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
#    },
#    {
#        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
#    },
#    {
#        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
#    },
#]
